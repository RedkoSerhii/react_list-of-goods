{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSort","sortBy","ALPHABET","setState","LENGTH","handleReverse","handleReset","this","goodsToRender","goods","visibleGoods","console","log","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","isButtonVisible","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,SAACC,GACZ,OAAQA,GACN,KAAKR,EAASS,SACZ,EAAKC,SAAS,CAAEL,SAAUG,IAC1B,MACF,KAAKR,EAASW,OACZ,EAAKD,SAAS,CAAEL,SAAUL,EAASW,WAZ3C,EAoBEC,cAAgB,WACd,EAAKF,UAAS,SAAAP,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAtBzB,EA0BES,YAAc,WACZ,EAAKH,SAAS,CACZN,YAAY,EACZC,SAAUL,EAASM,QA7BzB,4CAiCE,WAAU,IAAD,OACP,EAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAtEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAqBzB,OAjBAE,QAAQC,IAAId,EAAUD,GAEtBa,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQjB,GACN,KAAKL,EAASS,SACZ,OAAOY,EAAME,cAAcD,GAC7B,KAAKtB,EAASW,OACZ,OAAOU,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITpB,GACFa,EAAaQ,UAGRR,EA4CiBS,CAAkBzB,EAAiBa,KAAKX,OACxDwB,EAAkBvB,GAAcC,IAAaL,EAASM,KAE5D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,4BACA,CAAE,WAAYhB,KAAKX,MAAME,WAAaL,EAASS,WAEjDsB,QAAS,kBAAM,EAAKxB,WAAWP,EAASS,WAN1C,iCAWA,wBACEoB,KAAK,SACLD,UAAWE,IACT,+BACA,CAAE,WAAYhB,KAAKX,MAAME,WAAaL,EAASW,SAEjDoB,QAAS,kBAAM,EAAKxB,WAAWP,EAASW,SAN1C,4BAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,+BACA,CAAE,YAAahB,KAAKX,MAAMC,aAE5B2B,QAASjB,KAAKF,cANhB,qBAWCe,GACC,wBACEE,KAAK,SACLD,UAAU,uCACVG,QAASjB,KAAKD,YAHhB,sBAUJ,qBAAKe,UAAU,MAAf,SACE,6BACGb,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBAAIL,UAAU,OAAO,UAAQ,OAA7B,SAAgDK,GAAPA,iBAxFvD,GAAyBC,IAAMC,WC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d35b397.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (sortBy: SortType) => {\n    switch (sortBy) {\n      case SortType.ALPHABET:\n        this.setState({ sortType: sortBy });\n        break;\n      case SortType.LENGTH:\n        this.setState({ sortType: SortType.LENGTH });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goodsToRender = getReorderedGoods(goodsFromServer, this.state);\n    const isButtonVisible = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info is-rounded',\n              { 'is-light': this.state.sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success is-rounded',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning is-rounded',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {isButtonVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light is-rounded\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <div className=\"box\">\n          <ul>\n            {goodsToRender.map(good => (\n              <li className=\"good\" data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}